name: D√©ploiement BudgSmart

on:
  push:
    branches:
      - main

permissions:
  contents: write  # n√©cessaire pour push sur gh-pages

jobs:
  build-frontend:
    name: Build Frontend dans Docker
    runs-on: ubuntu-latest
    environment: github-pages
    
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Build dans un conteneur Node avec VITE_API_URL
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
        run: |
          docker run --rm \
            -e VITE_API_URL \
            -v ${{ github.workspace }}:/app \
            -w /app/frontend \
            node:20 \
            sh -c "npm install && npm run build"

      - name: Upload du dossier dist/ comme artefact
        uses: actions/upload-artifact@v4
        with:
          name: dist-frontend
          path: frontend/dist

  deploy-frontend:
    name: D√©ploiement sur GitHub Pages
    runs-on: ubuntu-latest
    needs: build-frontend

    steps:
      - name: Checkout du code (n√©cessaire pour peaceiris)
        uses: actions/checkout@v4

      - name: T√©l√©charger le build
        uses: actions/download-artifact@v4
        with:
          name: dist-frontend
          path: dist

      - name: D√©ployer sur GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dist
  deploy-backend:
    name: D√©ploiement Backend et Base de Donn√©es
    runs-on: ubuntu-latest

    steps:
    - name: Checkout du code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Installation des d√©pendances backend
      run: |
        cd backend
        npm ci

    - name: G√©n√©ration du client Prisma
      run: |
        cd backend
        npm run db:generate
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}

    - name: D√©ploiement des migrations de base de donn√©es
      run: |
        cd backend
        echo "üóÑÔ∏è D√©ploiement des migrations..."
        npm run db:migrate:deploy
        echo "‚úÖ Migrations d√©ploy√©es avec succ√®s"
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}

    - name: Test de connexion √† la base de donn√©es
      run: |
        cd backend
        echo "üîç Test de connexion √† la base de donn√©es..."
        npm run db:check
        echo "‚úÖ Base de donn√©es op√©rationnelle"
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}

    - name: D√©clenchement du d√©ploiement Render
      run: curl "$RENDER_DEPLOY_HOOK_URL"
      env:
        RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
