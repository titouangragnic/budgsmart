name: Déploiement BudgSmart

on:
  push:
    branches:
      - main

permissions:
  contents: write  # nécessaire pour push sur gh-pages

jobs:
  build-frontend:
    name: Build Frontend dans Docker
    runs-on: ubuntu-latest
    environment: github-pages
    
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Build dans un conteneur Node avec VITE_API_URL
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
        run: |
          docker run --rm \
            -e VITE_API_URL \
            -v ${{ github.workspace }}:/app \
            -w /app/frontend \
            node:20 \
            sh -c "npm install && npm run build"

      - name: Upload du dossier dist/ comme artefact
        uses: actions/upload-artifact@v4
        with:
          name: dist-frontend
          path: frontend/dist

  deploy-frontend:
    name: Déploiement sur GitHub Pages
    runs-on: ubuntu-latest
    needs: build-frontend

    steps:
      - name: Checkout du code (nécessaire pour peaceiris)
        uses: actions/checkout@v4

      - name: Télécharger le build
        uses: actions/download-artifact@v4
        with:
          name: dist-frontend
          path: dist

      - name: Déployer sur GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dist

  build-backend:
    name: Build backend
    runs-on: ubuntu-latest
    environment: production
    
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/backend
          tags: |
            type=ref,event=branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build et push du conteneur Docker
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-backend:
    name: Déploiement du backend
    runs-on: ubuntu-latest
    needs: build-backend  
    environment: production
    
    steps:
      - name: Deploiment du backend via ssh
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            export IMAGE_NAME="ghcr.io/${{ github.repository }}/backend:latest"
            echo "Pulling image: $IMAGE_NAME"
            docker pull $IMAGE_NAME
            echo "Stopping existing container..."
            docker stop budgsmart-backend || true
            docker rm budgsmart-backend || true
            echo "Starting new container..."
            docker run -d --name budgsmart-backend \
              -e NODE_ENV=production \
              -e DB_HOST=${{ secrets.DB_HOST }} \
              -e DB_PORT=80 \
              -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e DB_DATABASE=budgsmart \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              -e JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }} \
              -e GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} \
              -e GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} \
              -e PORT=3000 \
              -p 8081:3000 \
              $IMAGE_NAME
            echo "Container started successfully"
            docker ps | grep budgsmart-backend